---
const response = await fetch('https://api.github.com/users/Juanppdev/repos?sort=created');
const data = await response.json();
const repositories = Array.isArray(data) ? data : []; // Verificar si data es un array
//console.log(repositories )
const RepoNames = repositories.map(git => git.name);
const ACCESSTOKEN = import.meta.env.ACCESSTOKEN;

// api Graphql Github
const accessToken = ACCESSTOKEN;

const repositoriesWithImages = await Promise.all(
  repositories
  .filter(git => git.topics && git.topics.includes('projectoficial'))
    .map(async repo => {
      const query = `
        query {
          repository(owner: "Juanppdev", name: "${repo.name}") {
            openGraphImageUrl
          }
        }`;

      const apiGraph = await fetch('https://api.github.com/graphql', {
        method: 'POST',
        body: JSON.stringify({ query }),
        headers: {
          'Authorization': `Bearer ${accessToken}`,
          "Access-Control-Allow-Origin": "*",
          
        },
      });
      // const datos = await apiGraph.json();
      // console.log(datos)
      // const GitImage = datos.data.repository.openGraphImageUrl || ''; // Manejo si openGraphImageUrl es undefined

      return { ...repo};
    })
);
---

<section id="projects" class="w-8/12 p-0 mx-auto mb-5 flex items-center flex-col">
    <h1 class="text-4xl font-bold text-center py-6">Proyectos</h1>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2">
        {repositoriesWithImages.map(repo => (
            
            // <div class="w-full h-96 p-[0.75rem]">
            //     <div class="card">
            //       <img src={repo.GitImage} alt="" />
            //       <div class="info m-auto">
            //         <h1>{repo.name}</h1>
            //         <p>{repo.description}</p>
            //         <a href={repo.html_url} class="inline-flex mt-2 items-center px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
            //             Ver Proyecto
            //             <svg aria-hidden="true" class="w-4 h-4 ml-2 -mr-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
            //         </a>
            //       </div>
            //     </div>
            // </div>

            <div class="w-full h-60 border-[#30363d] rounded-md bg-red-200 flex-none relative border-2 shadow ">
                <img src="img/bg.jpg" alt="" class="object-cover   w-full h-full">
                <div class="flex flex-col justify-between absolute p-4 top-0 w-full h-full">
                    <div class="flex justify-between">
                        <h1 class="text-lg text-white">{repo.name}</h1>
                        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
                            <path fill-rule="evenodd" fill="#fff" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
                        </svg>
                    </div>
                    <p class="w-3/4 text-stone-400 text-xs leading-6">
                        {repo.description}
                    </p>
                    <a href={repo.html_url} target="_blank">
                        <button class="border-[#673281] border p-1 rounded-md text-white bg-[#4c4150] hover:opacity-80 transition w-full text-center">
                            Ver Proyecto
                        </button>
                    </a>
                </div>
            </div>
          ))}
    </div>
</section>
